{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/mag-food-diary-web/src/pages/Summary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport DayAPI from \"../utilities/day.json\";\nimport AllMeals from '../components/AllMeals';\nimport AddMeal from '../components/AddMeal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Summary = () => {\n  _s();\n\n  const userStorage = window.sessionStorage.getItem(\"user\");\n  const [daily, setDaily] = useState({\n    user: userStorage,\n    stamp: null,\n    day: null,\n    date: null,\n    data: []\n  });\n  const [dayButton, setDayButton] = useState({\n    dddd: [],\n    l: [],\n    stamp: []\n  }); // useEffect(() => {\n  //     setDaily({ ...daily, user: window.sessionStorage.getItem(\"user\")})\n  //     Axios.get(\"http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/day\")\n  //     .then(result => {\n  //         setDaily({ ...daily, stamp: result.data.stamp, day: result.data.day, date: result.data.date })\n  //         setDayButton(result.data.week)\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n\n  useEffect(() => {\n    setDaily({ ...daily,\n      user: window.sessionStorage.getItem(\"user\")\n    });\n    setDaily({ ...daily,\n      stamp: DayAPI.data.stamp,\n      day: DayAPI.data.day,\n      date: DayAPI.data.date\n    });\n    setDayButton(DayAPI.data.week);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: daily.stamp === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Searching For Results \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [daily.day, \" \", daily.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AllMeals, {\n        user: daily.user,\n        stamp: daily.stamp,\n        day: daily.day,\n        date: daily.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Summary, \"id7CXm9Ct0McMxyNjcdE9zgi8nY=\");\n\n_c = Summary;\nexport default Summary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/Users/markgire/Desktop/mag-food-diary-web/src/pages/Summary.js"],"names":["React","useState","useEffect","Axios","Grid","Typography","Button","DayAPI","AllMeals","AddMeal","Summary","userStorage","window","sessionStorage","getItem","daily","setDaily","user","stamp","day","date","data","dayButton","setDayButton","dddd","l","week"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport DayAPI from \"../utilities/day.json\";\n\nimport AllMeals from '../components/AllMeals';\nimport AddMeal from '../components/AddMeal';\n\nconst Summary = () => {\n    const userStorage = window.sessionStorage.getItem(\"user\")\n    \n    const [daily, setDaily] = useState({\n        user: userStorage,\n        stamp: null,\n        day: null,\n        date: null,\n        data: []\n    })\n    \n    const [dayButton, setDayButton] = useState({\n        dddd: [],\n        l: [],\n        stamp: []\n    })\n    // useEffect(() => {\n    //     setDaily({ ...daily, user: window.sessionStorage.getItem(\"user\")})\n    //     Axios.get(\"http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/day\")\n    //     .then(result => {\n    //         setDaily({ ...daily, stamp: result.data.stamp, day: result.data.day, date: result.data.date })\n    //         setDayButton(result.data.week)\n    //     })\n    //     .catch(err => console.log(err))\n    // }, [])\n\n    useEffect(() => {\n        setDaily({ ...daily, user: window.sessionStorage.getItem(\"user\")})\n            setDaily({ ...daily, stamp: DayAPI.data.stamp, day: DayAPI.data.day, date: DayAPI.data.date })\n            setDayButton(DayAPI.data.week)\n    }, [])\n\n    return(\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n            {(daily.stamp === null) \n            ? <div> Searching For Results </div> \n            : <Grid item>\n                {/* {dayButton.dddd.map((result, index) => (\n                    <Button onClick={() => setDaily({ ...daily, stamp: dayButton.stamp[index], date: dayButton.l[index], day: result })}>{result}</Button>\n                ))} */}\n                <Grid item xs=\"12\">\n                    <Button>-</Button>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Typography>{daily.day} {daily.date}</Typography>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Button>+</Button>\n                </Grid>\n                <AllMeals user={daily.user} stamp={daily.stamp} day={daily.day} date={daily.date}/>\n                \n            </Grid>}\n        </Grid>\n    )\n}\nexport default Summary;"]},"metadata":{},"sourceType":"module"}