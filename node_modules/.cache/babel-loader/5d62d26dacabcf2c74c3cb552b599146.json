{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/mag-food-diary-web/src/components/AllMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport FoodAPI from \"../utilities/food.json\";\nimport { Grid, Paper, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllMeals = props => {\n  _s();\n\n  const [daily, setDaily] = useState({\n    user: props.user,\n    stamp: props.stamp,\n    day: props.day,\n    date: props.date,\n    data: []\n  });\n  const [isAddMeal, setIsAddMeal] = useState(false);\n  const [mealData, setMealData] = useState({\n    mealName: \"Breakfast\",\n    foodName: \"\",\n    calories: \"\",\n    comments: \"test\"\n  }); //API Call \n  // useEffect(() => {\n  //     Axios.get(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/summary/${daily.user}/${props.stamp}/`)\n  //     .then(result => setDaily({ ...daily, stamp: props.stamp, day: props.day, date: props.date, data: result.data.meal}))\n  //     .catch(err => setDaily({ ...daily, data: null}))\n  // }, [daily])\n\n  useEffect(() => {\n    setDaily({ ...daily,\n      stamp: props.stamp,\n      day: props.day,\n      date: props.date,\n      data: FoodAPI.data.meal\n    }); //setDaily({ ...daily, stamp: props.stamp, day: props.day, date: props.date, data: null})\n  }, [daily]);\n\n  const handleMealName = meal => {\n    setMealData({ ...mealData,\n      mealName: meal\n    });\n  };\n\n  const handleFoodName = e => {\n    setMealData({ ...mealData,\n      foodName: e.target.value\n    });\n  };\n\n  const handleCalories = e => {\n    setMealData({ ...mealData,\n      calories: e.target.value\n    });\n  };\n\n  const submitAddMeal = e => {\n    e.preventDefault();\n    Axios.patch(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/add/${daily.user}/${daily.stamp}/`, {\n      meal: [mealData]\n    }).then(setIsAddMeal(false)).catch(err => console.log(err));\n  };\n\n  const submitStartDay = e => {\n    e.preventDefault();\n    Axios.post(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/create/item/`, {\n      _id: daily.user + daily.stamp,\n      user: daily.user,\n      stamp: daily.stamp,\n      day: daily.day,\n      date: daily.date,\n      meal: mealData\n    }).then(result => console.log(\"Successfully starte day\")).catch(err => console.log(err));\n  };\n\n  const style = {\n    mealCard: {\n      margin: \"20px 40px 20px 40px\",\n      backgroundColor: \"orange\",\n      color: \"white\"\n    },\n    mealFont: {\n      textAlign: \"left\",\n      padding: \"10px 0px 10px 15px\",\n      fontWeight: \"bold\",\n      fontSize: 20\n    },\n    foodFont: {\n      padding: \"10px 0px 10px 0px\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: daily.data == null ? /*#__PURE__*/_jsxDEV(Grid, {\n      Container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Start Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleMealName(\"Breakfast\"),\n          style: mealData.mealName == \"Breakfast\" ? {\n            backgroundColor: \"yellow\"\n          } : {\n            backgroundColor: \"white\"\n          },\n          children: \"Breakfast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleMealName(\"Lunch\"),\n          style: mealData.mealName == \"Lunch\" ? {\n            backgroundColor: \"yellow\"\n          } : {\n            backgroundColor: \"white\"\n          },\n          children: \"Lunch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleMealName(\"Dinner\"),\n          style: mealData.mealName == \"Dinner\" ? {\n            backgroundColor: \"yellow\"\n          } : {\n            backgroundColor: \"white\"\n          },\n          children: \"Dinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleMealName(\"Snack\"),\n          style: mealData.mealName == \"Snack\" ? {\n            backgroundColor: \"yellow\"\n          } : {\n            backgroundColor: \"white\"\n          },\n          children: \"Snack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Food Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleFoodName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleCalories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => submitStartDay(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      Container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsAddMeal(!isAddMeal),\n        children: \"Add Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), !isAddMeal ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleMealName(\"Breakfast\"),\n            style: mealData.mealName == \"Breakfast\" ? {\n              backgroundColor: \"yellow\"\n            } : {\n              backgroundColor: \"white\"\n            },\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleMealName(\"Lunch\"),\n            style: mealData.mealName == \"Lunch\" ? {\n              backgroundColor: \"yellow\"\n            } : {\n              backgroundColor: \"white\"\n            },\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleMealName(\"Dinner\"),\n            style: mealData.mealName == \"Dinner\" ? {\n              backgroundColor: \"yellow\"\n            } : {\n              backgroundColor: \"white\"\n            },\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleMealName(\"Snack\"),\n            style: mealData.mealName == \"Snack\" ? {\n              backgroundColor: \"yellow\"\n            } : {\n              backgroundColor: \"white\"\n            },\n            children: \"Snack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Food Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleFoodName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => submitAddMeal(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: \"1\",\n        style: style.mealCard,\n        children: daily.data.filter(filter => filter.mealName === \"Breakfast\").map(result => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              style: style.mealFont,\n              children: result.mealName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              style: style.foodFont,\n              children: result.foodName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              style: style.foodFont,\n              children: [result.calories, \" cal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllMeals, \"UuFvO7U18hdk1bSRFEPlqHz8M0A=\");\n\n_c = AllMeals;\nexport default AllMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMeals\");","map":{"version":3,"sources":["/Users/markgire/Desktop/mag-food-diary-web/src/components/AllMeals.js"],"names":["React","useState","useEffect","Axios","FoodAPI","Grid","Paper","Typography","Button","AllMeals","props","daily","setDaily","user","stamp","day","date","data","isAddMeal","setIsAddMeal","mealData","setMealData","mealName","foodName","calories","comments","meal","handleMealName","handleFoodName","e","target","value","handleCalories","submitAddMeal","preventDefault","patch","then","catch","err","console","log","submitStartDay","post","_id","result","style","mealCard","margin","backgroundColor","color","mealFont","textAlign","padding","fontWeight","fontSize","foodFont","filter","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport FoodAPI from \"../utilities/food.json\"\nimport { Grid, Paper, Typography, Button } from \"@mui/material\";\n\nconst AllMeals = (props) => {\n\n    const [daily, setDaily] = useState({\n        user: props.user,\n        stamp: props.stamp,\n        day: props.day,\n        date: props.date,\n        data: []\n    })\n    const [isAddMeal, setIsAddMeal] = useState(false)\n\n    const [mealData, setMealData] = useState({\n        mealName: \"Breakfast\",\n        foodName: \"\",\n        calories: \"\",\n        comments: \"test\"\n    })\n\n    //API Call \n    // useEffect(() => {\n    //     Axios.get(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/summary/${daily.user}/${props.stamp}/`)\n    //     .then(result => setDaily({ ...daily, stamp: props.stamp, day: props.day, date: props.date, data: result.data.meal}))\n    //     .catch(err => setDaily({ ...daily, data: null}))\n    // }, [daily])\n\n    useEffect(() => {\n        setDaily({ ...daily, stamp: props.stamp, day: props.day, date: props.date, data: FoodAPI.data.meal})\n        //setDaily({ ...daily, stamp: props.stamp, day: props.day, date: props.date, data: null})\n    }, [daily])\n\n    const handleMealName = (meal) => {\n        setMealData({ ...mealData, mealName: meal })\n    }\n    const handleFoodName = (e) => {\n        setMealData({ ...mealData, foodName: e.target.value })\n    }\n    const handleCalories = (e) => {\n        setMealData({ ...mealData, calories: e.target.value })\n    }\n\n    const submitAddMeal = (e) => {\n        e.preventDefault();\n        Axios.patch(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/add/${daily.user}/${daily.stamp}/`,\n        {\n            meal: [mealData]\n        })\n        .then(setIsAddMeal(false))\n        .catch(err => console.log(err))\n    }\n\n\n    const submitStartDay = (e) => {\n        e.preventDefault();\n        Axios.post(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/create/item/`, \n        {\n            _id: daily.user + daily.stamp,\n            user: daily.user,\n            stamp: daily.stamp,\n            day: daily.day,\n            date: daily.date,\n            meal: mealData\n        })\n        .then(result => console.log(\"Successfully starte day\"))\n        .catch(err => console.log(err))\n    }\n\n    const style = {\n        mealCard: {\n            margin: \"20px 40px 20px 40px\",\n            backgroundColor: \"orange\",\n            color: \"white\"\n        },\n        mealFont: {\n            textAlign: \"left\",\n            padding: \"10px 0px 10px 15px\",\n            fontWeight: \"bold\",\n            fontSize: 20\n        },\n        foodFont: {\n            padding: \"10px 0px 10px 0px\"\n        }\n    }\n    return (\n        <div>\n            {(daily.data == null)\n            ? <Grid Container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                <Typography>Start Day</Typography>\n                <Grid item xs=\"12\">\n                    <Button \n                        onClick={() => handleMealName(\"Breakfast\")} \n                        style={(mealData.mealName == \"Breakfast\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Breakfast</Button>\n                    <Button \n                        onClick={() => handleMealName(\"Lunch\")}\n                        style={(mealData.mealName == \"Lunch\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Lunch</Button>\n                    <Button \n                        onClick={() => handleMealName(\"Dinner\")}\n                        style={(mealData.mealName == \"Dinner\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Dinner</Button>\n                    <Button \n                        onClick={() => handleMealName(\"Snack\")}\n                        style={(mealData.mealName == \"Snack\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Snack</Button>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Typography>Food Name:</Typography>\n                    <input onChange={handleFoodName}/>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Typography>Calories</Typography>\n                    <input onChange={handleCalories}/>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Button onClick={(e) => submitStartDay(e)}>Submit</Button>\n                </Grid>\n            </Grid>\n            : <Grid Container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                <Button onClick={() => setIsAddMeal(!isAddMeal)}>Add Meal</Button>\n                {(!isAddMeal) \n                ? null \n                :<>\n                    <Grid item xs=\"12\">\n                        <Button \n                            onClick={() => handleMealName(\"Breakfast\")} \n                            style={(mealData.mealName == \"Breakfast\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Breakfast</Button>\n                        <Button \n                            onClick={() => handleMealName(\"Lunch\")}\n                            style={(mealData.mealName == \"Lunch\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Lunch</Button>\n                        <Button \n                            onClick={() => handleMealName(\"Dinner\")}\n                            style={(mealData.mealName == \"Dinner\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Dinner</Button>\n                        <Button \n                            onClick={() => handleMealName(\"Snack\")}\n                            style={(mealData.mealName == \"Snack\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Snack</Button>\n                    </Grid>\n                    <Grid item xs=\"12\">\n                        <Typography>Food Name:</Typography>\n                        <input onChange={handleFoodName}/>\n                    </Grid>\n                    <Grid item xs=\"12\">\n                        <Typography>Calories</Typography>\n                        <input onChange={handleCalories}/>\n                    </Grid>\n                    <Grid item xs=\"12\">\n                        <Button onClick={(e) => submitAddMeal(e)}>Submit</Button>\n                    </Grid>\n                </>}\n            \n                {/* {daily.data.map(result => (\n                    <Paper elevation=\"1\" style={style.mealCard}>\n                        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                            <Grid item xs=\"12\">\n                                <Typography style={style.mealFont}>{result.mealName}</Typography>\n                            </Grid>\n                            <Grid item xs=\"6\">\n                                <Typography style={style.foodFont}>{result.foodName}</Typography>\n                            </Grid>\n                            <Grid item xs=\"6\">\n                                <Typography style={style.foodFont}>{result.calories} cal</Typography>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                ))} */}\n                <Paper elevation=\"1\" style={style.mealCard}>\n                    {daily.data.filter(filter => filter.mealName === \"Breakfast\").map(result => (\n                        \n                            <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                                <Grid item xs=\"12\">\n                                    <Typography style={style.mealFont}>{result.mealName}</Typography>\n                                </Grid>\n                                <Grid item xs=\"6\">\n                                    <Typography style={style.foodFont}>{result.foodName}</Typography>\n                                </Grid>\n                                <Grid item xs=\"6\">\n                                    <Typography style={style.foodFont}>{result.calories} cal</Typography>\n                                </Grid>\n                            </Grid>\n                        \n                    ))}\n                </Paper>\n            </Grid>}\n        </div>    \n    )\n}\nexport default AllMeals;"]},"metadata":{},"sourceType":"module"}