[{"/Users/markgire/Desktop/mag-food-diary-web/src/index.js":"1","/Users/markgire/Desktop/mag-food-diary-web/src/reportWebVitals.js":"2","/Users/markgire/Desktop/mag-food-diary-web/src/App.js":"3","/Users/markgire/Desktop/mag-food-diary-web/src/pages/Summary.js":"4","/Users/markgire/Desktop/mag-food-diary-web/src/components/AllMeals.js":"5","/Users/markgire/Desktop/mag-food-diary-web/src/components/AddMeal.js":"6"},{"size":500,"mtime":1636792877033,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1636792877034,"results":"9","hashOfConfig":"8"},{"size":3731,"mtime":1637002832235,"results":"10","hashOfConfig":"8"},{"size":1704,"mtime":1636963606208,"results":"11","hashOfConfig":"8"},{"size":5717,"mtime":1636963327411,"results":"12","hashOfConfig":"8"},{"size":1041,"mtime":1636934923525,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"xodl2s",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/markgire/Desktop/mag-food-diary-web/src/index.js",[],["30","31"],"/Users/markgire/Desktop/mag-food-diary-web/src/reportWebVitals.js",[],"/Users/markgire/Desktop/mag-food-diary-web/src/App.js",["32","33","34","35","36"],"/Users/markgire/Desktop/mag-food-diary-web/src/pages/Summary.js",["37","38"],"import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport AllMeals from '../components/AllMeals';\nimport AddMeal from '../components/AddMeal';\n\nconst Summary = () => {\n    const userStorage = window.sessionStorage.getItem(\"user\")\n    \n    const [daily, setDaily] = useState({\n        user: userStorage,\n        stamp: null,\n        day: null,\n        date: null,\n        data: []\n    })\n    \n    const [dayButton, setDayButton] = useState({\n        dddd: [],\n        l: [],\n        stamp: []\n    })\n    useEffect(() => {\n        setDaily({ ...daily, user: window.sessionStorage.getItem(\"user\")})\n        Axios.get(\"http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/day\")\n        .then(result => {\n            setDaily({ ...daily, stamp: result.data.stamp, day: result.data.day, date: result.data.date })\n            setDayButton(result.data.week)\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    return(\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n            {(daily.stamp === null) \n            ? <div> Searching For Results </div> \n            : <Grid item>\n                {dayButton.dddd.map((result, index) => (\n                    <Button onClick={() => setDaily({ ...daily, stamp: dayButton.stamp[index], date: dayButton.l[index], day: result })}>{result}</Button>\n                ))}\n                <Typography variant=\"h5\">{daily.day} {daily.date}</Typography>\n                <AllMeals user={daily.user} stamp={daily.stamp} day={daily.day} date={daily.date}/>\n            </Grid>}\n        </Grid>\n    )\n}\nexport default Summary;","/Users/markgire/Desktop/mag-food-diary-web/src/components/AllMeals.js",["39","40","41","42","43","44","45","46","47","48"],"import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport FoodAPI from \"../utilities/food.json\"\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nconst AllMeals = (props) => {\n\n    const [daily, setDaily] = useState({\n        user: props.user,\n        stamp: props.stamp,\n        day: props.day,\n        date: props.date,\n        data: []\n    })\n    const [isAddMeal, setIsAddMeal] = useState(false)\n\n    const [mealData, setMealData] = useState({\n        mealName: \"Breakfast\",\n        foodName: \"\",\n        calories: \"\",\n        comments: \"test\"\n    })\n\n    //API Call \n    useEffect(() => {\n        Axios.get(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/summary/${daily.user}/${props.stamp}/`)\n        .then(result => setDaily({ ...daily, stamp: props.stamp, day: props.day, date: props.date, data: result.data.meal}))\n        .catch(err => setDaily({ ...daily, data: null}))\n    }, [daily])\n\n    const handleMealName = (meal) => {\n        setMealData({ ...mealData, mealName: meal })\n    }\n    const handleFoodName = (e) => {\n        setMealData({ ...mealData, foodName: e.target.value })\n    }\n    const handleCalories = (e) => {\n        setMealData({ ...mealData, calories: e.target.value })\n    }\n\n    const submitAddMeal = (e) => {\n        e.preventDefault();\n        Axios.patch(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/add/${daily.user}/${daily.stamp}/`,\n        {\n            meal: [mealData]\n        })\n        .then(setIsAddMeal(false))\n        .catch(err => console.log(err))\n    }\n\n\n    const submitStartDay = (e) => {\n        e.preventDefault();\n        Axios.post(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/create/item/`, \n        {\n            _id: daily.user + daily.stamp,\n            user: daily.user,\n            stamp: daily.stamp,\n            day: daily.day,\n            date: daily.date,\n            meal: mealData\n        })\n        .then(result => console.log(\"Successfully starte day\"))\n        .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div>\n\n            {(daily.data == null)\n            ? <>\n                <Typography>Start Day</Typography>\n                <Button \n                    onClick={() => handleMealName(\"Breakfast\")} \n                    style={(mealData.mealName == \"Breakfast\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Breakfast</Button>\n                <Button \n                    onClick={() => handleMealName(\"Lunch\")}\n                    style={(mealData.mealName == \"Lunch\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Lunch</Button>\n                <Button \n                    onClick={() => handleMealName(\"Dinner\")}\n                    style={(mealData.mealName == \"Dinner\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Dinner</Button>\n                <Button \n                    onClick={() => handleMealName(\"Snack\")}\n                    style={(mealData.mealName == \"Snack\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Snack</Button>\n                <Grid item xs=\"12\">\n                    <Typography>Food Name:</Typography>\n                    <input onChange={handleFoodName}/>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Typography>Calories</Typography>\n                    <input onChange={handleCalories}/>\n                </Grid>\n                <Grid item xs=\"12\">\n                    <Button onClick={(e) => submitStartDay(e)}>Submit</Button>\n                </Grid>\n            </>\n            : <>\n                <Button onClick={() => setIsAddMeal(!isAddMeal)}>Add Meal</Button>\n                    {(!isAddMeal) \n                    ? null \n                    :<>\n                        <Button \n                            onClick={() => handleMealName(\"Breakfast\")} \n                            style={(mealData.mealName == \"Breakfast\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Breakfast</Button>\n                        <Button \n                            onClick={() => handleMealName(\"Lunch\")}\n                            style={(mealData.mealName == \"Lunch\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Lunch</Button>\n                        <Button \n                            onClick={() => handleMealName(\"Dinner\")}\n                            style={(mealData.mealName == \"Dinner\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Dinner</Button>\n                        <Button \n                            onClick={() => handleMealName(\"Snack\")}\n                            style={(mealData.mealName == \"Snack\") ? { backgroundColor: \"yellow\" } : { backgroundColor: \"white\" }}>Snack</Button>\n                        <Grid item xs=\"12\">\n                            <Typography>Food Name:</Typography>\n                            <input onChange={handleFoodName}/>\n                        </Grid>\n                        <Grid item xs=\"12\">\n                            <Typography>Calories</Typography>\n                            <input onChange={handleCalories}/>\n                        </Grid>\n                        <Grid item xs=\"12\">\n                            <Button onClick={(e) => submitAddMeal(e)}>Submit</Button>\n                        </Grid>\n                    </>}\n            \n                {daily.data.map(result => (\n                    <div>\n                        <Typography>{result.foodName}</Typography>\n                        <Typography>{result.calories}</Typography>\n                    </div>\n                ))}\n            </>}\n        </div>    \n    )\n}\nexport default AllMeals;","/Users/markgire/Desktop/mag-food-diary-web/src/components/AddMeal.js",["49","50","51"],"import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport FoodAPI from \"../utilities/food.json\"\nimport { Typography, Button } from \"@mui/material\";\n\nconst AddMeal = (props) => {\n\n    \n    //API Call \n    const submitAddMeal = (e) => {\n        e.preventDefault();\n        Axios.patch(`http://magfooddiary-env.eba-bh6g2nuu.us-east-2.elasticbeanstalk.com/add/${props.user}/${props.stamp}/`,\n        {\n            meal: [\n                { \n                mealName: \"Breakfast\",\n                foodName: \"chicken22\",\n                calories: \"3333\",\n                comments: \"testpost\"\n            }\n        ]\n        })\n        .then(result => console.log(\"Successfully Added Item\"))\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            <Typography>Meal Name:</Typography>\n            <input />\n            <Typography>Calories</Typography>\n            <input />\n            <Button onClick={(e) => submitAddMeal(e)}>Submit</Button>\n        </div>\n    )\n}\nexport default AddMeal;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":21,"column":26,"nodeType":"62","messageId":"63","endLine":21,"endColumn":28},{"ruleId":"60","severity":1,"message":"61","line":24,"column":27,"nodeType":"62","messageId":"63","endLine":24,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":48,"column":6,"nodeType":"66","endLine":48,"endColumn":12,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":70,"column":31,"nodeType":"62","messageId":"70","endLine":70,"endColumn":32},{"ruleId":"56","severity":1,"message":"71","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":15},{"ruleId":"64","severity":1,"message":"72","line":32,"column":8,"nodeType":"66","endLine":32,"endColumn":10,"suggestions":"73"},{"ruleId":"56","severity":1,"message":"74","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":15},{"ruleId":"64","severity":1,"message":"75","line":29,"column":8,"nodeType":"66","endLine":29,"endColumn":15,"suggestions":"76"},{"ruleId":"60","severity":1,"message":"61","line":76,"column":47,"nodeType":"62","messageId":"63","endLine":76,"endColumn":49},{"ruleId":"60","severity":1,"message":"61","line":79,"column":47,"nodeType":"62","messageId":"63","endLine":79,"endColumn":49},{"ruleId":"60","severity":1,"message":"61","line":82,"column":47,"nodeType":"62","messageId":"63","endLine":82,"endColumn":49},{"ruleId":"60","severity":1,"message":"61","line":85,"column":47,"nodeType":"62","messageId":"63","endLine":85,"endColumn":49},{"ruleId":"60","severity":1,"message":"61","line":105,"column":55,"nodeType":"62","messageId":"63","endLine":105,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":108,"column":55,"nodeType":"62","messageId":"63","endLine":108,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":111,"column":55,"nodeType":"62","messageId":"63","endLine":111,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":114,"column":55,"nodeType":"62","messageId":"63","endLine":114,"endColumn":57},{"ruleId":"56","severity":1,"message":"77","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"78","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"74","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":15},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkCookie'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'AddMeal' is defined but never used.","React Hook useEffect has a missing dependency: 'daily'. Either include it or remove the dependency array. You can also do a functional update 'setDaily(d => ...)' if you only need 'daily' in the 'setDaily' call.",["82"],"'FoodAPI' is defined but never used.","React Hook useEffect has missing dependencies: 'props.date', 'props.day', and 'props.stamp'. Either include them or remove the dependency array. If 'setDaily' needs the current value of 'props.stamp', you can also switch to useReducer instead of useState and read 'props.stamp' in the reducer.",["83"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [auth, checkCookie]",{"range":"90","text":"91"},"Update the dependencies array to be: [daily]",{"range":"92","text":"93"},"Update the dependencies array to be: [daily, props.date, props.day, props.stamp]",{"range":"94","text":"95"},[1239,1245],"[auth, checkCookie]",[1010,1012],"[daily]",[947,954],"[daily, props.date, props.day, props.stamp]"]